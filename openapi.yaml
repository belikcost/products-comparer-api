openapi: 3.0.0
info:
  description: "Yandex backend"
  title: Mega Market Open API
  version: "1.0"
paths:
  /imports:
    post:
      description: Импортирует новые товары и/или категории. Товары/категории импортированные повторно обновляют текущие. Изменение типа элемента с товара на категорию или с категории на товар не допускается. Порядок элементов в запросе является произвольным.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShopUnitImportRequest"
      responses:
        "200":
          description: Вставка или обновление прошли успешно.
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
  /delete/{id}:
    delete:
      description: |
        Удалить элемент по идентификатору. При удалении категории удаляются все дочерние элементы. Доступ к статистике (истории обновлений) удаленного элемента невозможен.
      parameters:
        - description: Идентификатор
          in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
      responses:
        "200":
          description: Удаление прошло успешно.
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
        "404":
          description: Категория/товар не найден.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
  /nodes/{id}:
    get:
      description: |
        Получить информацию об элементе по идентификатору. При получении информации о категории также предоставляется информация о её дочерних элементах.

        - для пустой категории поле children равно пустому массиву, а для товара равно null
        - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий. Если категория не содержит товаров цена равна null. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
      parameters:
        - description: Идентификатор элемента
          in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
      responses:
        "200":
          description: Информация об элементе.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShopUnit"
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
        "404":
          description: Категория/товар не найден.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
components:
  schemas:
    ShopUnitType:
      type: string
      description: Тип элемента - категория или товар
      enum:
        - OFFER
        - CATEGORY
    ShopUnit:
      type: object
      required:
        - id
        - name
        - date
        - type
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          description: Уникальный идентфикатор
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        name:
          description: Имя категории
          type: string
          nullable: false
        date:
          type: string
          format: date-time
          nullable: false
          description: Время последнего обновления элемента. 
          example: "2022-05-28T21:12:01.000Z"
        parentId:
          type: string
          format: uuid
          nullable: true
          description: UUID родительской категории
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          description: Целое число, для категории - это средняя цена всех дочерних товаров(включая товары подкатегорий). Если цена является не целым числом, округляется в меньшую сторону до целого числа. Если категория не содержит товаров цена равна null.
          type: integer
          nullable: true
          format: int64
        children:
          description: Список всех дочерних товаров\категорий. Для товаров поле равно null.
          type: array
          items:
            $ref: "#/components/schemas/ShopUnit"
      example:
        id: "3fa85f64-5717-4562-b3fc-2c963f66a111"
        name: Категория
        type: CATEGORY
        parentId: null
        date: "2022-05-28T21:12:01.000Z"
        price: 6
        children:
          - name: Оффер 1
            id: "3fa85f64-5717-4562-b3fc-2c963f66a222"
            price: 4
            date: "2022-05-28T21:12:01.000Z"
            type: OFFER
            parentId: "3fa85f64-5717-4562-b3fc-2c963f66a111"
          - name: Подкатегория
            type: CATEGORY
            id: "3fa85f64-5717-4562-b3fc-2c963f66a333"
            date: "2022-05-26T21:12:01.000Z"
            parentId: "3fa85f64-5717-4562-b3fc-2c963f66a111"
            price: 8
            children:
              - name: Оффер 2
                id: "3fa85f64-5717-4562-b3fc-2c963f66a444"
                parentId: "3fa85f64-5717-4562-b3fc-2c963f66a333"
                date: "2022-05-26T21:12:01.000Z"
                price: 8
                type: OFFER
    ShopUnitImport:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          description: Уникальный идентфикатор
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        name:
          description: Имя элемента.
          type: string
          nullable: false
        parentId:
          type: string
          format: uuid
          nullable: true
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
          description: UUID родительской категории
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          nullable: true
          description: Целое число, для категорий поле должно содержать null.
          type: integer
          format: int64
      example:
        id: "3fa85f64-5717-4562-b3fc-2c963f66a444"
        name: Оффер
        parentId: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        price: 234
        type: OFFER
    ShopUnitImportRequest:
      type: object
      properties:
        items:
          type: array
          description: Импортируемые элементы
          nullable: false
          items:
            $ref: "#/components/schemas/ShopUnitImport"
        updateDate:
          type: string
          nullable: false
          format: date-time
          example: "2022-05-28T21:12:01.000Z"
          description: Время обновления добавляемых товаров/категорий.
    ShopUnitStatisticUnit:
      type: object
      required:
        - id
        - name
        - type
        - date
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          description: Уникальный идентфикатор
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        name:
          description: Имя элемента
          type: string
          nullable: false
        parentId:
          type: string
          format: uuid
          nullable: true
          description: UUID родительской категории
          example: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          description: Целое число, для категории - это средняя цена всех дочерних товаров(включая товары подкатегорий). Если цена является не целым числом, округляется в меньшую сторону до целого числа. Если категория не содержит товаров цена равна null.
          type: integer
          format: int64
          nullable: true
        date:
          type: string
          nullable: false
          format: date-time
          description: Время последнего обновления элемента.
      example:
        id: "3fa85f64-5717-4562-b3fc-2c963f66a444"
        name: Оффер
        date: "2022-05-28T21:12:01.000Z"
        parentId: "3fa85f64-5717-4562-b3fc-2c963f66a333"
        price: 234
        type: OFFER
    ShopUnitStatisticResponse:
      type: object
      properties:
        items:
          description: История в произвольном порядке.
          type: array
          items:
            $ref: "#/components/schemas/ShopUnitStatisticUnit"
    Error:
      required:
        - code
        - message
      properties:
        code:
          nullable: false
          type: integer
        message:
          nullable: false
          type: string
